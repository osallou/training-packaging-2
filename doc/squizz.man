.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.35
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SQUIZZ 1"
.TH SQUIZZ 1 "2009-05-19" "Unix" "User Manuals"
.SH "NAME"
.IP "\fBsquizz\fR \- Sequence format checker" 4
.IX Item "squizz - Sequence format checker"
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.PD 0
.IP "\fBsquizz\fR [\fB\-AShlns\fR] [\fB\-c\fR \fIformat\fR] [\fB\-f\fR \fIformat\fR] \fIfile\fR" 4
.IX Item "squizz [-AShlns] [-c format] [-f format] file"
.PD
.SH "OPTIONS"
.IX Header "OPTIONS"
Following command line options are allowed:
.IP "\-A" 4
.IX Item "-A"
Restrict detection/verification to alignment formats (conflict with
\&\fB\-S\fR option).
.IP "\-S" 4
.IX Item "-S"
Restrict detection/verification to sequence formats (conflict with
\&\fB\-A\fR option).
.IP "\-c \fIformat\fR" 4
.IX Item "-c format"
Convert detected sequence/alignment into \fIformat\fR. This option
implies strict alignment checking.
.IP "\-f \fIformat\fR" 4
.IX Item "-f format"
Assume input format is \fIformat\fR. Do not try to detect the format,
just verify that the given one is correct.
.IP "\-h" 4
.IX Item "-h"
Usage display.
.IP "\-l" 4
.IX Item "-l"
List all supported formats.
.IP "\-n" 4
.IX Item "-n"
Count and report detected entries. This option is only available when
the detection is restricted to a single type (with \fB\-A\fR or \fB\-S\fR
options) and strict checks (without \fB\-s\fR option) are enabled.
.IP "\-s" 4
.IX Item "-s"
Disable strict format checks (enabled by default).
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBsquizz\fR is a sequence format file checker, but it has some
conversion capabilities too.
.PP
\&\fBsquizz\fR can detect the most common sequence and alignment formats :
.PP
* \fB\s-1EMBL\s0\fR, \fB\s-1FASTA\s0\fR, \fB\s-1GCG\s0\fR, \fB\s-1GDE\s0\fR, \fB\s-1GENBANK\s0\fR, \fB\s-1IG\s0\fR, \fB\s-1NBRF\s0\fR, \fB\s-1PIR\s0\fR
(codata), \fB\s-1RAW\s0\fR, and \fB\s-1SWISSPROT\s0\fR.
.PP
* \fB\s-1CLUSTAL\s0\fR, \fB\s-1FASTA\s0\fR, \fB\s-1MSF\s0\fR, \fB\s-1NEXUS\s0\fR, \fB\s-1PHYLIP\s0\fR (interleaved and
sequential) and \fB\s-1STOCKHOLM\s0\fR.
.PP
\&\fBsquizz\fR can do some conversions too, if the format the input format
is supported. Only 3 types are available : sequence to sequence,
alignment to alignment, and alignment to sequence (the last one,
sequence to alignment, require multiple alignments algorithms and
cannot be handled with formatting tools).
.PP
Strict format checks validate the previously detected objects, by
making some sanity checks:
.IP "\- sequence strings must exists." 4
.IX Item "- sequence strings must exists."
.PD 0
.IP "\- alignment is made of more than one sequence." 4
.IX Item "- alignment is made of more than one sequence."
.IP "\- alignment sequence strings must have the same length." 4
.IX Item "- alignment sequence strings must have the same length."
.IP "\- alignment sequence names must exists, and be unique." 4
.IX Item "- alignment sequence names must exists, and be unique."
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\fBseqfmt\fR(5), \fBalifmt\fR(5)" 4
.IX Item "seqfmt(5), alifmt(5)"
.SH "AUTHOR"
.IX Header "AUTHOR"
Nicolas Joly (njoly@pasteur.fr), Institut Pasteur.
